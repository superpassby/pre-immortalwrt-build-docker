name: NEW_Matrix Docker Build and Release

on:
  workflow_dispatch:  # 手动触发
  # schedule:
  #   - cron: '0 1 * * *'  # 每天凌晨 1 点 UTC，按需求调整时间

jobs:
  Building:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [immortalwrt, openwrt, lede, lienol]
        platform: [x86_64]
        branch: [openwrt-24.10]
    outputs:
      version: ${{ matrix.version }}
      branch: ${{ env.branch }}
      platform: ${{ matrix.platform }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Determine branch
        id: set_branch
        run: |
          if [[ "${{ matrix.version }}" == "immortalwrt" || "${{ matrix.version }}" == "openwrt" ]]; then
            echo "branch=${{ matrix.branch }}" >> $GITHUB_ENV
          elif [[ "${{ matrix.version }}" == "lede" ]]; then
            if [[ "${{ matrix.branch }}" == "openwrt-24.10" ]]; then
              echo "branch=master" >> $GITHUB_ENV
            else
              exit 0
            fi
          elif [[ "${{ matrix.version }}" == "lienol" ]]; then
            branch_name=$(echo "${{ matrix.branch }}" | sed 's/^openwrt-//')
            echo "branch=${branch_name}" >> $GITHUB_ENV
          fi

      - name: Build Docker image
        run: |
          docker build -t ${{ matrix.version }}_${{ env.branch }}_${{ matrix.platform }} -f ./${{ matrix.version }}/${{ env.branch }}_${{ matrix.platform }}_Dockerfile .

      - name: Save Docker image to a tar file
        run: |
          docker save ${{ matrix.version }}_${{ env.branch }}_${{ matrix.platform }} | gzip > ${{ matrix.version }}_${{ env.branch }}_${{ matrix.platform }}.tar.gz

      - name: Split the tar file into smaller chunks
        run: |
          sudo apt-get install -y p7zip-full
          7z a -v24m ${{ matrix.version }}_${{ env.branch }}_${{ matrix.platform }}.tar.gz.7z ${{ matrix.version }}_${{ env.branch }}_${{ matrix.platform }}.tar.gz

      - name: Upload artifacts
        uses: actions/upload-artifact@main
        with:
          name: ${{ matrix.version }}_${{ env.branch }}_${{ matrix.platform }}_artifacts
          path: |
            ${{ matrix.version }}_${{ env.branch }}_${{ matrix.platform }}.tar.gz.7z*
          compression-level: 0  # 禁用压缩


  Release:
    needs: Building
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@main
        with:
          path: ./artifacts/

      - name: List files in ./artifacts
        run: |
          echo "Listing files in ./artifacts after unzipping:"
          ls -la ./artifacts  # 显示解压后的文件列表
          
      - name: Unzip all artifact files
        run: |
          # 解压所有下载的 .zip 文件并删除原始的 .zip 文件
          for zip_file in ./artifacts/*.zip; do
            if [[ -f "$zip_file" ]]; then
              unzip "$zip_file" -d ./artifacts/
              rm "$zip_file"  # 删除 .zip 文件
            fi
          done
          
      - name: List files in ./artifacts
        run: |
          echo "Listing files in ./artifacts after unzipping:"
          ls -la ./artifacts  # 显示解压后的文件列表
  
      - name: Create Git tag
        id: create_tag
        run: |
          TAG_NAME="发布时间（UTC）：$(date +'%Y.%m.%d-%H_%M')"
          echo "TAG_NAME=${TAG_NAME}"
          git tag $TAG_NAME
          git push origin $TAG_NAME
          git push https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/superpassby/Build-openwrt-in-docker-pre $TAG_NAME
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV

      - name: Set up GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: |
            $(find ./artifacts -name "*.tar.gz*")  # 上传解压后的文件
          body: "Release with multiple builds"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
